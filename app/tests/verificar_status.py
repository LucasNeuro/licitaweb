"""
Verifica status da aplica√ß√£o e scheduler
"""

import requests
import json
from datetime import datetime

def verificar_aplicacao_local():
    """Verifica se aplica√ß√£o local est√° rodando"""
    print("üîç VERIFICANDO APLICA√á√ÉO LOCAL")
    print("=" * 50)
    
    try:
        # Testa se aplica√ß√£o est√° rodando
        response = requests.get("http://localhost:8000/", timeout=5)
        
        if response.status_code == 200:
            print("‚úÖ Aplica√ß√£o LOCAL est√° rodando!")
            
            # Verifica scheduler
            try:
                scheduler_response = requests.get("http://localhost:8000/debug/scheduler", timeout=5)
                if scheduler_response.status_code == 200:
                    scheduler_data = scheduler_response.json()
                    
                    print(f"üìä STATUS DO SCHEDULER:")
                    print(f"   üîÑ Ativo: {scheduler_data.get('scheduler_running', False)}")
                    print(f"   ‚öôÔ∏è Configurado: {scheduler_data.get('config', {}).get('ativo', False)}")
                    print(f"   ‚è∞ Pr√≥xima execu√ß√£o: {scheduler_data.get('proxima_execucao_brasil', 'N/A')}")
                    print(f"   üïê Hora atual: {scheduler_data.get('hora_atual_brasil', 'N/A')}")
                    
                else:
                    print("‚ö†Ô∏è N√£o foi poss√≠vel verificar o scheduler")
                    
            except Exception as e:
                print(f"‚ö†Ô∏è Erro ao verificar scheduler: {e}")
                
        else:
            print(f"‚ùå Aplica√ß√£o local n√£o est√° respondendo (Status: {response.status_code})")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Aplica√ß√£o LOCAL n√£o est√° rodando")
        print("üí° Execute: python run.py")
    except Exception as e:
        print(f"‚ùå Erro ao verificar aplica√ß√£o local: {e}")

def verificar_aplicacao_render():
    """Verifica aplica√ß√£o no Render"""
    print("\nüåê VERIFICANDO APLICA√á√ÉO NO RENDER")
    print("=" * 50)
    
    # Voc√™ precisa colocar a URL do seu app no Render aqui
    render_url = "https://seu-app.onrender.com"  # MUDE AQUI
    
    try:
        response = requests.get(render_url, timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ Aplica√ß√£o RENDER est√° rodando!")
            
            # Verifica scheduler no Render
            try:
                scheduler_response = requests.get(f"{render_url}/debug/scheduler", timeout=10)
                if scheduler_response.status_code == 200:
                    scheduler_data = scheduler_response.json()
                    
                    print(f"üìä STATUS DO SCHEDULER (RENDER):")
                    print(f"   üîÑ Ativo: {scheduler_data.get('scheduler_running', False)}")
                    print(f"   ‚öôÔ∏è Configurado: {scheduler_data.get('config', {}).get('ativo', False)}")
                    print(f"   ‚è∞ Pr√≥xima execu√ß√£o: {scheduler_data.get('proxima_execucao_brasil', 'N/A')}")
                    
            except Exception as e:
                print(f"‚ö†Ô∏è Erro ao verificar scheduler no Render: {e}")
                
        else:
            print(f"‚ùå Aplica√ß√£o Render n√£o est√° respondendo (Status: {response.status_code})")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Aplica√ß√£o RENDER n√£o est√° acess√≠vel")
        print("üí° Verifique se o deploy foi feito")
    except Exception as e:
        print(f"‚ùå Erro ao verificar aplica√ß√£o Render: {e}")

def main():
    """Fun√ß√£o principal"""
    print("üöÄ VERIFICA√á√ÉO DE STATUS DAS APLICA√á√ïES")
    print("=" * 60)
    print(f"‚è∞ Verifica√ß√£o em: {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}")
    
    # Verifica aplica√ß√£o local
    verificar_aplicacao_local()
    
    # Verifica aplica√ß√£o no Render
    verificar_aplicacao_render()
    
    print("\n" + "=" * 60)
    print("üìã RESUMO:")
    print("‚úÖ Se ambas est√£o rodando: Tudo funcionando!")
    print("‚ö†Ô∏è Se s√≥ local: Precisa fazer deploy no Render")
    print("‚ùå Se nenhuma: Precisa iniciar aplica√ß√µes")
    print("=" * 60)

if __name__ == "__main__":
    main()
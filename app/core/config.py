"""
Configura√ß√µes do sistema
"""

import os
from dotenv import load_dotenv

# Carrega .env do diret√≥rio raiz
load_dotenv(os.path.join(os.path.dirname(__file__), '..', '..', '.env'))

class Settings:
    """Configura√ß√µes da aplica√ß√£o"""
    
    # Supabase
    SUPABASE_URL: str = os.getenv("SUPABASE_URL", "")
    SUPABASE_KEY: str = os.getenv("SUPABASE_KEY", "")
    STORAGE_BUCKET: str = os.getenv("STORAGE_BUCKET", "pncpfiles")
    
    # API
    API_TITLE: str = "üöÄ PNCP Extrator Final"
    API_VERSION: str = "3.0.0"
    API_DESCRIPTION: str = """
    ## Sistema completo de extra√ß√£o autom√°tica de editais do PNCP
    
    ### ‚ú® Funcionalidades:
    - üîç **Busca autom√°tica** de editais mais recentes
    - üìã **Extra√ß√£o completa** via APIs + Selenium
    - üíæ **Salvamento autom√°tico** no Supabase
    - üìé **Upload de arquivos** para Storage
    - ü§ñ **Scheduler configur√°vel**
    - ‚ö° **Performance otimizada** (1-2s por edital)
    
    ### üéØ Endpoints Principais:
    1. **POST /configurar-scheduler** - Configura extra√ß√£o autom√°tica
    2. **POST /executar-agora** - Executa extra√ß√£o imediatamente  
    3. **POST /extrair-dia-anterior** - Extrai editais do dia anterior
    """
    
    # Servidor - Compat√≠vel com Render
    HOST: str = os.getenv("HOST", "0.0.0.0")
    PORT: int = int(os.getenv("PORT", 8000))
    
    # Selenium - Configura√ß√£o para Render
    SELENIUM_HEADLESS: bool = os.getenv("SELENIUM_HEADLESS", "true").lower() == "true"
    SELENIUM_TIMEOUT: int = 30
    
    # PNCP
    PNCP_BASE_URL: str = "https://pncp.gov.br"
    PNCP_API_URL: str = "https://pncp.gov.br/api/pncp/v1"
    
    def is_configured(self) -> bool:
        """Verifica se as configura√ß√µes essenciais est√£o definidas"""
        return bool(self.SUPABASE_URL and self.SUPABASE_KEY)

# Inst√¢ncia global das configura√ß√µes
settings = Settings()